Problem statement
You are given an array ‘A’ of size ‘N’ containing only 0s and 1s. You have to sort the array by traversing the array only once.

For Example:
For the following array:
[0 1 1 1 0 0 1]

The output should be [0 0 0 1 1 1 1].

CODE --

#include <bits/stdc++.h> 
void sort0and1(int n, vector<int> &A){

         // In-built Sort Function TC - O(nlogn)
    // sort(A.begin() , A.end()); 

	// Bubble Sort TC - O(n^2)

    // for(int i=0; i<n-1; i++){  
    //     for(int j=0; j<n-1-i; j++){
    //         if(A[j]>A[j+1]){
    //             swap(A[j] , A[j+1]);
    //         }
    //     }
    // }

    int i = 0;  // Two pointer Approach TC - O(n)
    int j = n-1;
    while(i<=j){
        if(A[i]==0)
            i++;
        else if(A[j]==1)
            j--;
        else if(A[i]==1 && A[j]==0){
            swap(A[i] , A[j]);
            i++;
            j--;
        }
    }
}