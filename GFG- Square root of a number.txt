Given an integer n, find the square root of n. If n is not a perfect square, then return the floor value.

Floor value of any number is the greatest Integer which is less than or equal to that number

Examples:

Input: n = 5
Output: 2
Explanation: Since, 5 is not a perfect square, floor of square_root of 5 is 2.
----------------------------------------------------------------------------------------------------------------------------------------
CODE

class Solution {
  public:
    long long int floorSqrt(long long int n) {
        int low = 0;
        int high = n;
        while(low<=high){
            int mid = low + (high-low)/2;
            long long m = (long long)mid;
            if((m*m)==n)
                return mid;
            else if((m*m)<n)
                low = mid + 1;
            else
                high = mid - 1;
        }
        return high;
    }
};