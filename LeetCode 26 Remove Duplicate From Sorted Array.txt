## Input: nums = [0,0,1,1,1,2,2,3,3,4]
   Output: 5, nums = [0,1,2,3,4,_,_,_,_,_]

class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        int n = nums.size();
        int j = 0;
        for(int i=0; i<=n-1; i++)
        {
            if(nums[j]!=nums[i])
            {
                nums[++j] = nums[i];
            }
        }
        return ++j;
        
    }
};

Approach - Using Two Pointer Method
Time Complexity - O(n) - Bec We Have to Travel The whole Array of size n atleast one time
Space Complexity - O(1) - no extra Space is used 